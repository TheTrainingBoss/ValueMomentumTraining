/* ------------------------------------------------------------------------------
<auto-generated>
    This file was generated by Sitefinity CLI v1.1.0.31
</auto-generated>
------------------------------------------------------------------------------ */

using ValueMomentumCMS.Mvc.Models;
using System.Web.Mvc;
using Telerik.Sitefinity.Mvc;
using Telerik.Sitefinity.Personalization;
using Telerik.Sitefinity.Modules.News;
using System.Linq;
using Telerik.Sitefinity.GenericContent.Model;
using System.Collections.Generic;
using System.Text.RegularExpressions;
using Telerik.Sitefinity.News.Model;
using Telerik.Sitefinity.Workflow;
using System;

namespace ValueMomentumCMS.Mvc.Controllers
{
	[ControllerToolboxItem(Name = "NewsCrud", Title = "News Crud", SectionName = "ValueMomentum")]
	public class NewsCrudController : Controller, IPersonalizable
	{
        NewsManager newsManager = NewsManager.GetManager();    
        // GET: NewsCrud
        public ActionResult Index()
		{
			var news = newsManager.GetNewsItems().Where(n => n.Status == ContentLifecycleStatus.Live);

            var model = new NewsCrudModel(news);
			
			return View("Index", model);
		}

        public ActionResult CreatePressRelease()
        {
            NewsItem item = newsManager.CreateNewsItem();
            item.Title = "News Item 2";
            item.Content = "<h2>Test content here</h2>";
            item.DateCreated = DateTime.UtcNow;
            item.PublicationDate = DateTime.UtcNow;
            item.LastModified = DateTime.UtcNow;
            item.UrlName = Regex.Replace(item.Title, @"[^\w\-\!\$\'\(\)\=\@\d_]+", "-");

            newsManager.SaveChanges();
            
            var bag = new Dictionary<string, string>();
            bag.Add("ContentType", typeof(NewsItem).FullName);
            WorkflowManager.MessageWorkflow(item.Id, typeof(NewsItem), null, "Publish", false, bag);

            return View("CreatePressRelease");
        }

        protected override void HandleUnknownAction(string actionName)
        {
            this.ActionInvoker.InvokeAction(this.ControllerContext, "Index");
        }
	}
}